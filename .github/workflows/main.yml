name: Dvora 2 Go

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.github/workflows/docker-image.yml'
      - './docs/*'
      - 'history.txt'

  pull_request:
    branches: [ main ]
    
concurrency:
  group: workflow-${{ github.head_ref }}
  cancel-in-progress: true

jobs: 

  windows: 
    runs-on: windows-latest
    steps:
    
    - uses: actions/checkout@v3
    
    - name: Get current date
      id: date
      shell: pwsh
      run: Get-Date
      
    - name: Get Public IPv4
      shell: pwsh
      run: Invoke-RestMethod 'https://api.ipify.org?format=json'

    - name: Get local IPv4
      shell: pwsh
      run: Get-NetIPConfiguration | select InterfaceAlias,IPv4Address
      
    - name: Create download folder
      shell: pwsh
      run: new-item DownloadFiles -ItemType directory -ErrorAction SilentlyContinue
      
    - name: Download files
      shell: pwsh
      run: cat Downloads.txt | foreach { Start-BitsTransfer $_ -Destination .\DownloadFiles}
    
    - name: Get all Files Hashes
      shell: pwsh
      run: |
        Get-ChildItem .\DownloadFiles -File | Get-FileHash | Select -Property hash, @{N='File'; E={$_.path.split('\')[-1]}} | Export-Csv -Path .\windows_hash.csv -Encoding UTF8
    
    - uses: actions/upload-artifact@v2
      with:
        name: windows-hash
        path: .\windows_hash.csv

  Linux:
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v3
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y_%m_%d_%H_%M')"
    
    - name: Get Public IPv4
      shell: pwsh
      run: Invoke-RestMethod 'https://api.ipify.org?format=json'

    - name: Get local IPv4
      run: ip -br a
    
    - name: Create download folder
      run: mkdir DownloadFiles
      
    - name: Download all links from file
      run: |
        cd ./DownloadFiles
        cat ../Downloads.txt | parallel --gnu "wget {}"

    - name: Get all Files Hashes
      shell: pwsh
      run: |
        Get-ChildItem ./DownloadFiles -File | Get-FileHash | Select -Property hash, @{N='File'; E={$_.path.split('/')[-1]}} | Export-Csv -Path ./linux_hash.csv -Encoding UTF8
      
    - uses: actions/upload-artifact@v2
      with:
        name: linux-hash
        path: ./linux_hash.csv

  compare_hash:
    runs-on: ubuntu-latest
    needs: [Linux,windows]
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
          name: linux-hash
      
      - uses: actions/download-artifact@v2
        with:
          name: windows-hash
      
      - name: get all files in current directory
        run: dir
        
      - name: Get Linux Hash
        shell: pwsh
        run: Import-Csv -Path linux_hash.csv
            
      - name: Get Windows Hash
        shell: pwsh
        run: Import-Csv -Path windows_hash.csv
            
      - name: Compare linux and windows hashes
        shell: pwsh
        run: | 
          $ReferenceObject = Import-Csv -Path linux_hash.csv
          $DifferenceObject = Import-Csv -Path windows_hash.csv
          Compare-Object -ReferenceObject $ReferenceObject -DifferenceObject $DifferenceObject -IncludeEqual -Property hash,File | Format-List
            
      - name: get all files in current directory
        run: dir
